" set encoding
set encoding=utf-8
" ensure a compatible shell is used
set shell=/bin/bash
" disable filetype detection before running Vundle
filetype off

" ______ PLUGINS ______
" include Vundle bundle in realtime path
set rtp+=~/.vim/bundle/Vundle.vim
" begin Vundle operations
call vundle#begin()
" allow Vundle to manage Vundle
Plugin 'VundleVim/Vundle.vim'

" install colorschemes
Plugin 'cocopon/iceberg.vim'

" install Ack for smarter file searching
Plugin 'mileszs/ack.vim'
" install trailing whitespace to highlight trailing whitespace
Plugin 'bronson/vim-trailing-whitespace'
" install ctrlp for fuzzy file finding
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
" install nerdtree
Plugin 'scrooloose/nerdtree'
" install lightline statusline
Plugin 'itchyny/lightline.vim'
" install surround for paren
Plugin 'tpope/vim-surround'
" install ragtag for HTML tag completion
Plugin 'tpope/vim-ragtag'
" install commentary for quick commenting
Plugin 'tpope/vim-commentary'

" install SCSS syntax
Plugin 'cakebaker/scss-syntax.vim'
" install Ansible syntax
Plugin 'pearofducks/ansible-vim'
" install Puppet syntax
Plugin 'rodjek/vim-puppet'
" install emmet support
" Plugin 'mattn/emmet-vim'

" install Rails support
Plugin 'tpope/vim-rails'
" install Ruby support
Plugin 'vim-ruby/vim-ruby'

" finish Vundle operations
call vundle#end()
" ---------------------

" enable filetype detection after running Vundle to allow new types to be picked up
filetype plugin indent on

" unless syntax highlighting is already enabled…
if !exists('g:syntax_on')
  " enable syntax highlighting
  syntax enable
endif
" if ag is available on the system…
if executable('ag')
  " configure Ack to use ag
  let g:ackprg = 'ag --vimgrep'
endif

" enables 24-bit color
set termguicolors
" select colorscheme
colorscheme iceberg

" follows indent of previous line when creating a new line
set autoindent
" follows language-specific indenting rules when creating a new line
set smartindent
" configures folding
set foldmethod=syntax foldlevelstart=30
" configures tabs
set tabstop=2 shiftwidth=2 expandtab
" highlight line containing cursor
set cursorline
" split below and right
set splitbelow splitright
" make searching case insensitive unless the query has capital letters.
set ignorecase smartcase
" Use 'g' flag by default with :s/foo/bar/.
set gdefault
" Use 'magic' patterns (extended regular expressions).
set magic
" highlight 100th column
set colorcolumn=96
" I don't like wrapping
set nowrap
" let the statusline handle modes
set noshowmode

" defines tab and trailing space indicators
set listchars=tab:>-,trail:-
" displays hidden characters such as spaces and tabs
set list

" show line numbers
set number
" highlight the results of the last search
set hlsearch
" run substitutions incrementally
" set inccommand=nosplit
" disable saving of swapfiles
set noswapfile
" allow find to recursively search directories
set path+=**

" enable nerdtree toggling
nnoremap <LEADER>n :NERDTreeToggle<CR>
nnoremap <C-p> :Files<CR>
